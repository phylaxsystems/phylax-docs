name: docker

on:
  workflow_dispatch: {}
  push:
    tags:
      - v*
  schedule:
    - cron: "0 0 * * *" # This line schedules the workflow to run every night at midnight

env:
  REPO_NAME: ${{ github.repository_owner }}/phylax
  IMAGE_NAME: ${{ github.repository_owner }}/phylax
  CARGO_TERM_COLOR: always
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/phylax
  DOCKER_USERNAME: ${{ github.actor }}

jobs:
  build:
    name: build and push
    if: github.event_name == 'push' # This line ensures this job only runs on push events
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - uses: taiki-e/install-action@cross

      - name: Log in to Docker
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io --username ${DOCKER_USERNAME} --password-stdin

      - name: Set up Docker builder
        run: |
          docker buildx create --use

      - name: Build and push image
        run: |
          PROFILE=maxperf make docker-build-latest

  nightly:
    name: nightly build and push
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-tags: true
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - uses: taiki-e/install-action@cross

      - name: Log in to Docker
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io --username ${DOCKER_USERNAME} --password-stdin

      - name: Set up Docker builder
        run: |
          docker buildx create --use

      - name: Build and push image
        run: |
          PROFILE=maxperf make docker-build-nightly  # This line is changed to use docker-build-nightly
